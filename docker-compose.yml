services:
  Traefik:
    image: traefik:latest
    container_name: traefik
    command:
        - '--api.insecure=true'
        - '--providers.consulcatalog=true'
        - '--providers.consulcatalog.prefix=traefik'
        - '--providers.consulcatalog.endpoint.address=consul:8500'
        - '--serversTransport.insecureSkipVerify=true'
        - '--entryPoints.web.address=:80'
        - '--entryPoints.developer_api.address=:8081'
        - '--log.level=DEBUG'
    ports:
      - 80:80
      - 8081:8081
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - ./traefik.yaml:/etc/traefik/traefik.yaml
    networks:
      - Pro290_network
    labels:
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=http://localhost:60698"
    restart: always

  MongoDBPosts:
    container_name: MongoDBPosts
    image: mongo:latest
    restart: always
    hostname: MongoDBPosts
    ports:
      - "27017:27017"
    networks:
      - Pro290_network

  PostService:
    container_name: postservice
    build: ./postservicejs
    image: postservice:latest
    networks:
      - Pro290_network
    ports:
      - "6001:8080"
    depends_on:
      - MongoDBPosts
      - Consul
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.postservice.rule=Host(`postservice.localhost`)"
    #   - "traefik.http.services.postservice.loadbalancer.server.port=8080"

  Consul:
    image: hashicorp/consul:latest
    container_name: consul
    command: "agent -dev -client=0.0.0.0"
    ports:
      - "8500:8500"
    networks:
      - Pro290_network
    labels:
      - 'traefik.enable=true'
      - 'traefik.consulcatalog.connect=true'
    restart: unless-stopped

  RabbitMQ:
    image: rabbitmq
    container_name: rabbitmq
    networks:
      - Pro290_network
    ports:
      - "5672:5672"
      - "15672:15672"

  UserService:
    image: user_service
    build: /user_service
    environment:
      - API_ADDRESS=0.0.0.0
      - USER_URL=postgres://David:Password123@userdatabase:5432/users
      - IMAGE_URL=postgres://David:Password123@imagedatabase:5432/images
      - SECRET_KEY=idkmanwhatdoyouwantfromme
      - RABBIT_URL=amqp://rabbitmq
    networks:
      - Pro290_network
    depends_on:
      - Consul
    restart: unless-stopped

  RabbitConsumer:
    image: rabbit_consumer
    build: /consumer
    environment:
      - EMAIL=zomhorsethompson2656@gmail.com
      - PASSWORD=zkzb vevz esul frjt 
      - RABBIT_URL=amqp://rabbitmq
    networks:
      - Pro290_network
    restart: unless-stopped

  UserDatabase:
    image: postgres
    container_name: userdatabase
    hostname: userdatabase
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: David
      POSTGRES_PASSWORD: Password123
      POSTGRES_DB: users
    networks:
      - Pro290_network
  
  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
    networks:
      - Pro290_network

  MessageService:
    container_name: messageservice
    build: ./messageservicejs
    image: messageservice:latest
    networks:
      - Pro290_network
    ports:
      - "6002:6002"
    depends_on:
      - MongoDBPosts
      - Consul

  MongoDBMessages:
    container_name: MongoDBMessages
    image: mongo:latest
    restart: always
    hostname: MongoDBMessages
    command: mongod --port 27018
    ports:
      - "27018:27018"
    networks:
      - Pro290_network

  # FrontService:
  #   image: front_service
  #   build: /frontend
  #   environment:
  #     - HOST=0.0.0.0  
  #   networks:
  #     - Pro290_network
  #   ports:
  #     - "8088:8088"
  #   depends_on:
  #     - Consul
  #   restart: unless-stopped

  # FrontEnd:
  #   container_name: frontend
  #   image: frontend:latest
  #   build: ./frontend
  #   networks:
  #     - Pro290_network
  #   ports:
  #     - "8088:8088"
  #   depends_on:
  #     - UserService
  #     - PostService
  #     - MessageService
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.frontend.rule=Host(`frontend.localhost`)"
    #   - "traefik.http.services.frontend.loadbalancer.server.port=3000"

networks:
  Pro290_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16

